-- Turtle class for controlled mining

-- Helper variables
local FORWARD = 1
local RIGHT = 2
local BACKWARD = 3
local LEFT = 4

-- Tunnel map has structure like this
-- First index is y_depth
-- Then 4 digits which indicate how deep the corridors are (forward, right, backward, left)

local function Miner()
    -- Initialisation
    local miner = {}
    miner.idle = true
    miner.gps_pos = gps.locate()
    miner.home = vector.new(miner.gps_pos)
    miner.tunnel_maps = {0,0,0,0}
    miner.direction = FORWARD
    miner.depth = 10

    function miner.update_gps()
        miner.gps_pos = gps.locate(1)
        local position = vector.new(miner.gps_pos)
        miner.dist_home = position - miner.home
    end

    function miner.falling_block()
        local success, data = turtle.inspect()
        for key, value in pairs(config.falling_blocks) do
            if data.name == value then
                return true
            end
        end
        return false
    end

    function miner.dig_down()
        turtle.digDown()
        turtle.down()
        miner.pos_y = miner.pos_y - 1 -- Go down 1 depth
        miner.total_block_back = miner.total_block_back + 1
    end

    function miner.move_home()
        -- TODO
    end

    function miner.strip_mine()

    end

    function miner.tick()
        if miner.idle then
            miner.move_home()
            os.sleep(5)
            return
        end

        -- Currently we are mining
        -- TODO: Implement this shit
        -- Check the depth of turtle
        if (miner.pos_y > miner.depth) then
            miner.dig_down()

        else
            miner.strip_mine()
        end

        -- Finally we need to check if we need to go back home
    end

    -- Can only start if gps is retrieved
    function miner.start()
        if miner.pos_y == nil then
            miner.update_gps()
        end
        if miner.pos_y ~= nil then
            miner.idle = false
        end
    end

    -- In idle mode we should go home
    function miner.go_home()
        miner.idle = true
    end


    function miner.get_info()
        local info = {}
        info.fuel = turtle.getFuelLevel()
        info.gps = gps.locate(1)
        return info
    end

    return miner
end

function init()
    return Miner()
end

function get_info(info)
    info["fuel"] = turtle.getFuelLevel()
    info["gps"] = gps.locate(1)
end